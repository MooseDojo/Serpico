%link{:href => "/css/bootstrap-suggest.css", :rel => "stylesheet"}/
%script{:src => "/js/bootstrap-suggest.js"}

.span10
  %br
  %h2 #{@finding.title}
  %br
  %br
  %form{ :class => "form-horizontal", :method => 'post', :enctype => 'application/x-www-form-urlencoded'}
    .control-group
      %label{ :class => "control-label", :for => "title" } Title
      .controls
        %input{ :type => 'text', :name => 'title', :value => "#{@finding.title}"}
    -if !@master
      %br
      .control-group
        %label{ :class => "control-label", :for => "assessment_type" } Assessment Type
        .controls
          %select{ :name => "assessment_type" }
            - options.assessment_types.each do |type|
              - if @finding
                - if type == @finding.assessment_type
                  %option{ :selected => "selected" } #{type}
                - else
                  %option #{type}
    -if @master
      .control-group
        %label{ :class => "control-label", :for => "approved" } Approved
        .controls
          -if @finding.approved
            %input{ :type=>"checkbox", :name => 'approved', :checked=>"checked"}
          - else
            %input{ :type=>"checkbox", :name => 'approved'}
      - if @vulnmap
        .control-group
          %label{ :class => "control-label", :for => "existingvulnmaps" } Vuln IDs mapped to this finding
          .controls
            .table
              %table{ :style => 'width: 220px'}
                - @vulnmaps.each do |vuln|
                  - if vuln.msf_ref
                    %tr
                      %td
                        #{vuln.msf_ref}
                      %td{ :align => "right"}
                        %a{ :class => "btn btn-danger btn-sm", :href => "/mapping/#{@finding.id}/vulnmap/#{vuln.id}/delete"}
                          %i{:class => 'icon-remove icon-white icon-sm', :value => "#{vuln.msf_ref}", :type => "submit", :title => 'Delete'}
        .control-group
          %label{ :class => "control-label", :for => "msf_ref" }
            %a{:href=> '#mymodal', "data-toggle"=>'modal', :class=>'btn btn-info'}
              Add new Vuln ID mapping
          .modal{:id=>'mymodal', :class=>'modal hide fade', :tabindex=>'-1', :role=>'dialog', "aria-labelledby"=>'modal-label', "aria-hidden"=>'true'}
            .modal-header
              %button{:type=>'button', :class=>'close', "data-dismiss"=>"modal", "aria-hidden"=>"true"}
                x
              %h3{:id=>"modal-label"}
                Vulnerability Importing
            .modal-body
              %p
                The references field in Metasploits database contains various types of reference codes.
              %p
                When importing vulnerabilities from Metasploit, Serpico will split these reference codes by comma. Whatever is placed in the Vuln ID mapping field will be checked for a string comparison upon import. This allows Serpico to support any type of vendor/tool that Metasploit supports.
              %h4 Big fat Warning
              %p{:class=>"text-error"}
                Metasploit doesn't do the best job at parsing these reference codes. Use CVEs over vendor specific IDs whenever possible. Burp is not support via this method. Instead, use the legacy Burp XML importer.
              %br
                %h4 Supported reference codes:
                .table
                  %table{:width => "70%"}
                    %thead{:width => "20%"}
                      %tr
                        %td
                          %b Type
                        %td
                          %b Format to use
                    %tbody{:width => "50%"}
                      %tr
                        %td
                          CVE
                        %td
                          CVE-2020-1234
                      %tr
                        %td
                          Nessus
                        %td
                          NSS-1234
          .controls
            %input{ :type => 'text', :name => 'msf_ref'}
      - if @nessusmap
        .control-group
          %label{ :class => "control-label", :for => "existingnessusmaps" } Nessus IDs Mapped to this finding
          .controls
            .table
              %table{ :style => 'width: 220px'}
                %tbody
                - @nessus.each do |item|
                  - if item.pluginid
                    %tr
                      %td
                        #{item.pluginid}
                      %td{ :align => "right"}
                        %a{ :class => "btn btn-danger btn-xs", :href => "/mapping/#{@finding.id}/nessus/#{item.pluginid}/delete"}
                          %i{:class => 'icon-remove icon-white', :value => "#{item.pluginid}", :type => "submit", :title => 'Delete'}
        .control-group
          %label{ :class => "control-label", :for => "nessus_pluginid" } Add new nessus ID mapping
          .controls
            %input{ :type => 'text', :name => 'nessus_pluginid'}
      - if @burpmap
        .control-group
          %label{ :class => "control-label", :for => "existingburpmaps" } Burp IDs Mapped to this finding
          .controls
            .table
              %table{ :style => 'width: 220px'}
                %tbody
                - @burp.each do |item|
                  - if item.pluginid
                    %tr
                      %td
                        #{item.pluginid}
                      %td{ :align => "right"}
                        %a{ :class => "btn btn-danger btn-xs", :href => "/mapping/#{@finding.id}/burp/#{item.pluginid}/delete"}
                          %i{:class => 'icon-remove icon-white', :value => "#{item.pluginid}", :type => "submit", :title => 'Delete'}
        .control-group
          %label{ :class => "control-label", :for => "burp_pluginid" }
            %a{:href=> '#burpmodal', "data-toggle"=>'modal'}
              Add new Burp ID mapping
          .modal{:id=>'burpmodal', :class=>'modal hide fade', :tabindex=>'-1', :role=>'dialog', "aria-labelledby"=>'modal-label', "aria-hidden"=>'true'}
            .modal-header
              %button{:type=>'button', :class=>'close', "data-dismiss"=>"modal", "aria-hidden"=>"true"}
                x
              %h3{:id=>"modal-label"}
                Mapping Burp findings
            .modal-body
              You can use the following link to help map burp's ids to your findings:
              %br
              %br
              %a{:href=> "http://portswigger.net/burp/help/scanner_issuetypes.html", :target => "_blank"} http://portswigger.net/burp/help/scanner_issuetypes.html
              %br
          .controls
            %input{ :type => 'text', :name => 'burp_pluginid'}
    - if @dread
      .control-group
        %label{ :class => "control-label", :for => "damage" } Damage
        .controls
          %input{ :type => 'number', :min => '1', :max => '10', :name => 'damage', :value => "#{@finding.damage}", :required => true}
      .control-group
        %label{ :class => "control-label", :for => "reproducability" } Reproducibility
        .controls
          %input{ :type => 'number', :min => '1', :max => '10', :name => 'reproducability', :value => "#{@finding.reproducability}", :required => true}
      .control-group
        %label{ :class => "control-label", :for => "exploitability" } Exploitability
        .controls
          %input{ :type => 'number', :min => '1', :max => '10', :name => 'exploitability', :value => "#{@finding.exploitability}", :required => true}
      .control-group
        %label{ :class => "control-label", :for => "affected_users" } Affected Users
        .controls
          %input{ :type => 'number', :min => '1', :max => '10', :name => 'affected_users', :value => "#{@finding.affected_users}", :required => true}
      .control-group
        %label{ :class => "control-label", :for => "discoverability" } Discoverability
        .controls
          %input{ :type => 'number', :min => '1', :max => '10', :name => 'discoverability', :value => "#{@finding.discoverability}", :required => true}
    - elsif @cvss
      .control-group
        %label{ :class => "control-label", :for => "av" } Access Vector
        .controls
          %select{ :name => "av" }
            - options.av.each do |av|
              - if av == @finding.av
                %option{ :selected => "selected" } #{av}
              - else
                %option #{av}
      .control-group
        %label{ :class => "control-label", :for => "ac" } Access Complexity
        .controls
          %select{ :name => "ac" }
            - options.ac.each do |ac|
              - if ac == @finding.ac
                %option{ :selected => "selected" } #{ac}
              - else
                %option #{ac}
      .control-group
        %label{ :class => "control-label", :for => "au" } Authentication
        .controls
          %select{ :name => "au" }
            - options.au.each do |au|
              - if au == @finding.au
                %option{ :selected => "selected" } #{au}
              - else
                %option #{au}
      .control-group
        %label{ :class => "control-label", :for => "c" } Confidentiality Impact
        .controls
          %select{ :name => "c" }
            - options.c.each do |c|
              - if c == @finding.c
                %option{ :selected => "selected" } #{c}
              - else
                %option #{c}
      .control-group
        %label{ :class => "control-label", :for => "i" } Integrity Impact
        .controls
          %select{ :name => "i" }
            - options.i.each do |i|
              - if i == @finding.i
                %option{ :selected => "selected" } #{i}
              - else
                %option #{i}
      .control-group
        %label{ :class => "control-label", :for => "a" } Availability Impact
        .controls
          %select{ :name => "a" }
            - options.a.each do |a|
              - if a == @finding.a
                %option{ :selected => "selected" } #{a}
              - else
                %option #{a}
      .control-group
        %label{ :class => "control-label", :for => "e" } Exploitability
        .controls
          %select{ :name => "e" }
            - options.e.each do |e|
              - if e == @finding.e
                %option{ :selected => "selected" } #{e}
              - else
                %option #{e}
      .control-group
        %label{ :class => "control-label", :for => "rl" } Remediation Level
        .controls
          %select{ :name => "rl" }
            - options.rl.each do |rl|
              - if rl == @finding.rl
                %option{ :selected => "selected" } #{rl}
              - else
                %option #{rl}
      .control-group
        %label{ :class => "control-label", :for => "rc" } Report Confidence
        .controls
          %select{ :name => "rc" }
            - options.rc.each do |rc|
              - if rc == @finding.rc
                %option{ :selected => "selected" } #{rc}
              - else
                %option #{rc}
      .control-group
        %label{ :class => "control-label", :for => "cdp" } Collateral Damage Potential
        .controls
          %select{ :name => "cdp" }
            - options.cdp.each do |cdp|
              - if cdp == @finding.cdp
                %option{ :selected => "selected" } #{cdp}
              - else
                %option #{cdp}
      .control-group
        %label{ :class => "control-label", :for => "td" } Target Distribution
        .controls
          %select{ :name => "td" }
            - options.td.each do |td|
              - if td == @finding.td
                %option{ :selected => "selected" } #{td}
              - else
                %option #{td}
      .control-group
        %label{ :class => "control-label", :for => "cr" } Confidentiality Requirement
        .controls
          %select{ :name => "cr" }
            - options.cr.each do |cr|
              - if cr == @finding.cr
                %option{ :selected => "selected" } #{cr}
              - else
                %option #{cr}
      .control-group
        %label{ :class => "control-label", :for => "ir" } Integrity Requirement
        .controls
          %select{ :name => "ir" }
            - options.ir.each do |ir|
              - if ir == @finding.ir
                %option{ :selected => "selected" } #{ir}
              - else
                %option #{ir}
      .control-group
        %label{ :class => "control-label", :for => "ar" } Availability Requirement
        .controls
          %select{ :name => "ar" }
            - options.ar.each do |ar|
              - if ar == @finding.ar
                %option{ :selected => "selected" } #{ar}
              - else
                %option #{ar}
    - if @riskmatrix
      .control-group
        %label{ :class => "control-label", :for => "risk" } Vulnerability Risk Level
        .controls
          %select{ :name => "risk" }
            - risk_types = ["None", "Low", "Moderate", "High", "Critical"]
            - if !@finding.risk
              - @finding.risk = @finding.dread_total/10
              - @finding.risk = 4 if dread_total == 50
            - [0,1,2,3,4].each do |r_type|
              - if r_type == @finding.risk
                %option{ :value => "#{r_type}", :selected => "selected" } #{risk_types[r_type]}
              - else
                %option{ :value => "#{r_type}"} #{risk_types[r_type]}
      .control-group
        %label{ :class => "control-label", :for => "severity" } Severity
        .controls
          %select{ :name => "severity" }
            - options.severity.each do |severity|
              - if severity == @finding.severity
                %option{ :selected => "selected" } #{severity}
              - else
                %option #{severity}
      .control-group
        %label{ :class => "control-label", :for => "severity_rationale" } Severity Rationale
        .controls
          %textarea{ :rows => '3', :class => 'input-xxlarge', :id => 'severity_rationale', :name => 'severity_rationale'}
            - if @finding
              - if @finding.severity_rationale
                #{meta_markup(@finding.severity_rationale)}
      .control-group
        %label{ :class => "control-label", :for => "likelihood" } Likelihood
        .controls
          %select{ :name => "likelihood" }
            - options.likelihood.each do |likelihood|
              - if likelihood == @finding.likelihood
                %option{ :selected => "selected" } #{likelihood}
              - else
                %option #{likelihood}
      .control-group
        %label{ :class => "control-label", :for => "likelihood_rationale" } Likelihood Rationale
        .controls
          %textarea{ :rows => '3', :class => 'input-xxlarge', :id => 'likelihood_rationale', :name => 'likelihood_rationale'}
            - if @finding
              - if @finding.likelihood_rationale
                #{meta_markup(@finding.likelihood_rationale)}


    - else
      .control-group
        %label{ :class => "control-label", :for => "risk" } Vulnerability Risk Level
        .controls
          %select{ :name => "risk" }
            - risk_types = ["Informational", "Low", "Moderate", "High", "Critical"]
            - if !@finding.risk
              - @finding.risk = @finding.dread_total/10
              - @finding.risk = 4 if dread_total == 50
            - [0,1,2,3,4].each do |r_type|
              - if r_type == @finding.risk
                %option{ :value => "#{r_type}", :selected => "selected" } #{risk_types[r_type]}
              - else
                %option{ :value => "#{r_type}"} #{risk_types[r_type]}
    .control-group
      %label{ :class => "control-label", :for => "effort" } Remediation Effort
      .controls
        %select{ :name => "effort" }
          - options.effort.each do |effort|
            - if effort == @finding.effort
              %option{ :selected => "selected" } #{effort}
            - else
              %option #{effort}
    .control-group
      %label{ :class => "control-label", :for => "type" } Finding Type
      .controls
        %select{ :name => "type" }
          - options.finding_types.each do |type|
            - if type == @finding.type
              %option{ :selected => "selected" } #{type}
            - else
              %option #{type}
    .control-group
      %label{ :class => "control-label", :for => "overview" }
        %a{:href=> '#mymodal', "data-toggle"=>'modal', :class=>'btn btn-info'}
          Overview
      .modal{:id=>'mymodal', :class=>'modal hide fade', :tabindex=>'-1', :role=>'dialog', "aria-labelledby"=>'modal-label', "aria-hidden"=>'true'}
        .modal-header
          %button{:type=>'button', :class=>'close', "data-dismiss"=>"modal", "aria-hidden"=>"true"}
            x
          %h3{:id=>"modal-label"}
            Meta Markup
        .modal-body
          %p
            There are four markup sets you can use in the Overview and the Remediation summary. This text is converted inside of Microsoft Word.
            %p{:class=>"text-error"}
              YOU MUST CLOSE ALL TAGS. OTHERWISE YOU CAN DESTROY ALL TEXT FORMATTING. SEE EXAMPLES BELOW.
            %b
              Review the finding "TEST - Markup Tester" for a clear example. As always, press preview to see the finding in Word.
          %h2
            &lt;&lt;CUSTOMER&gt;&gt;
          %p
            If you place &lt;&lt;CUSTOMER&gt;&gt; in a finding the customer name will be substituted in the finding. This is particularly helpful in the Templated Findings.
            %br
            %br
            %code
              Overall &lt;&lt;CUSTOMER&gt;&gt; was found to have a strong...
            %br
            %br
            Will generate the following inside of a report:
            %br
            %br
            %code
              Overall AcmeCorporation was found to have a strong...
          %h2
            Bullets
          %p
            Place the bulleted text inbetween a *- and a -* like so:
            %br
            %br
            %code
              *- Bulleted text goes here -*
          %h2
            Paragraph Heading Text
          %p
            Place the heading inbetween a [== and a ==] like so:
            %br
            %br
            %code
              [== Heading text goes here ==]
          %h2
            Italics
          %p
            Place italicized inbetween a [~~ and a ~~] like so:
            %br
            %br
            %code
              [~~ Italics ~~]
          %h2
            Code
          %p
            Place code inbetween a [[[ and a ]]] like below. CODE CANNOT STRETCH MULTIPLE LINES.
            %br
            %br
            %code
              [[[ code, code goes here ]]]
      .controls
        %textarea{ :rows => '10', :class => 'input-xxlarge', :id => 'overview', :name => 'overview'}
          - if @finding
            - if @finding.overview
              #{meta_markup(@finding.overview)}
    .control-group
      %label{ :class => "control-label", :for => "pocu" } Proof of Concept
      .controls
        %textarea{ :rows => '10', :class => 'input-xxlarge', :name => 'poc', :id => "pocu"}
          - if @finding
            - if @finding.poc
              #{meta_markup(@finding.poc)}
    - attachments=''
    - if @attaches
      - @attaches.each do |attach|
        - attachments = attachments + "{name: '#{attach}'},"
    / autosuggest code is care of bootstrap-suggest.js
    :javascript
      var files = [
        #{attachments}
      ];
        $('#pocu').suggest('[', {
          data: files,
          filter: {
              casesensitive: true,
              limit: 10
            },
          map: function(file) {
            return {
              value: '!!'+file.name+'!!]',
              text: '<strong>'+file.name+'</strong>'
            }
          }
        })

    - if !@master
      .control-group
        %label{ :class => "control-label", :for => "affected_hosts" } Affected Hosts/URLs
        .controls
          %textarea{ :rows => '3', :class => 'input-xxlarge', :name => 'affected_hosts'}
            - if @finding
              - if @finding.affected_hosts
                #{meta_markup(@finding.affected_hosts)}
    .control-group
      %label{ :class => "control-label", :for => "remediation" } Remediation
      .controls
        %textarea{ :rows => '10', :class => 'input-xxlarge', :name => 'remediation'}
          - if @finding
            - if @finding.remediation
              #{meta_markup(@finding.remediation)}
    .control-group
      %label{ :class => "control-label", :for => "references" } References (One Per Line)
      .controls
        %textarea{ :rows => '5', :class => 'input-xxlarge', :name => 'references'}
          - if @finding
            - if @finding.references
              #{meta_markup(@finding.references)}
    - if !@master
      .control-group
        %label{ :class => "control-label", :for => "notes" } Notes Data
        %i{:class=>"icon-chevron-down", "data-toggle"=>"collapse", "data-target"=>"#info_2", :id=>"actionButton"}
        .info{ :id => "info_2", :class => "collapse out" }
          %label
            Notes
          .controls
          %textarea{ :rows => '10', :class => 'input-xxlarge', :name => 'notes'}
            - if @finding
              - if @finding.notes
                #{meta_markup(@finding.notes)}
    - if !@master
      .control-group
        %label{ :class => "control-label", :for => "preso" } Presentation Data
        %i{:class=>"icon-chevron-down", "data-toggle"=>"collapse", "data-target"=>"#info_1", :id=>"actionButton"}
        .info{ :id => "info_1", :class => "collapse out" }
          %label
            Presentation Points (One Per Line)
          .controls
          %textarea{ :rows => '10', :class => 'input-xxlarge', :name => 'presentation_points'}
            - if @finding
              - if @finding.presentation_points
                #{meta_markup(@finding.presentation_points)}
          %label
            Presentation Remediation Points (One Per Line)
          .controls
          %textarea{ :rows => '10', :class => 'input-xxlarge', :name => 'presentation_rem_points'}
            - if @finding
              - if @finding.presentation_rem_points
                #{meta_markup(@finding.presentation_rem_points)}


    - id_r = @report ? "/report/#{@report.id}/findings" : "/master/findings"
    %input{:type => 'submit', :value => 'Save'}
    %a{ :href => "#{id_r}"}
      %input{ :type => "button", :value => 'Cancel'}
